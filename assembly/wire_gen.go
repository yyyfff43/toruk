// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package assembly

import (
	"git.zhwenxue.com/zhgo/toruk/internal/biz"
	"git.zhwenxue.com/zhgo/toruk/internal/data"
	"git.zhwenxue.com/zhgo/toruk/internal/pkg/resource"
	"git.zhwenxue.com/zhgo/toruk/internal/pkg/rpc"
	"git.zhwenxue.com/zhgo/toruk/internal/server/dubbo"
	dubbo2 "git.zhwenxue.com/zhgo/toruk/internal/service/dubbo"
)

// Injectors from wire.go:

func NewUserDubboServer() (dubbo.DubboServer, func(), error) {
	logger, err := resource.NewBasicLogger()
	if err != nil {
		return nil, nil, err
	}
	engine, err := resource.NewMysqlClient(logger)
	if err != nil {
		return nil, nil, err
	}
	redis, err := resource.NewRedisClient(logger)
	if err != nil {
		return nil, nil, err
	}
	sugarLogger, err := resource.NewLogger()
	if err != nil {
		return nil, nil, err
	}
	model, cleanup, err := data.NewModel(engine, redis, sugarLogger)
	if err != nil {
		return nil, nil, err
	}
	favoriteBookService := rpc.NewUgcService()
	cache := resource.NewCache(logger)
	bizBiz := biz.NewBiz(model, sugarLogger, favoriteBookService, cache)
	userProvider := dubbo2.NewUserProvider(bizBiz)
	dubboServer := dubbo.NewUserDubboServer(userProvider)
	return dubboServer, func() {
		cleanup()
	}, nil
}
